package com.finance.app.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.experimental.SuperBuilder;

import java.math.BigDecimal;
import java.time.LocalDateTime;

@Getter
@Setter
@SuperBuilder  //Builder pattern is a design pattern that provides a way to construct complex objects step by step.  Super builder supports inheritance
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class FinancialInfo extends BaseEntity{

    private String year; // year of the report
    private String quarter;  // Q1, Q2, Q3, or Q4
    private BigDecimal per;  // price to earnings ratio
    private BigDecimal revenue; // total amount of money generated by the company
    private BigDecimal profit;
    private BigDecimal eps; // earnings per share
    private BigDecimal der; // debt to equity ratio
    private BigDecimal roe; // return on equity
    private BigDecimal currentRatio; // current ratio
    private BigDecimal quickRatio; // quick ratio
    private BigDecimal grossProfitMargin; // gross profit margin
    private BigDecimal operatingProfitMargin; // operating profit margin
    private BigDecimal netProfitMargin; // net profit margin
    private BigDecimal roa; // return on assets
    private BigDecimal dividend; // dividend yield
    private BigDecimal freeCashFlow; // free cash flow



    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "stock_id")
    private Stock stock;

}
